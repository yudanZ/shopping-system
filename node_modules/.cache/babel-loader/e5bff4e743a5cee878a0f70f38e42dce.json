{"ast":null,"code":"var _jsxFileName = \"E:\\\\yudan\\\\shopping-system\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFormSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    /*****Get collections data from firestore */\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      this.props.updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: true\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 76\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: this.state.loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 82\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/yudan/shopping-system/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","unsubscribeFormSnapshot","state","loading","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","props","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EACQC,+BADR,QAEe,+BAFf;AAGA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AACA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,GAAG;AACV;AADU,SAOdC,uBAPc,GAOY,IAPZ;AAGV,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AAEf;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGhB,+BAA+B,CAAEe,QAAF,CAAtD;AACA,WAAKE,KAAL,CAAWhB,iBAAX,CAA6Be,cAA7B;AACA,WAAKE,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAG;AAAZ,OAAd;AACH,KAJD;AAKH;;AACDS,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKH,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEG,KAAK,CAACC,IAAK,EAAnC;AAAsC,MAAA,MAAM,EAAKJ,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAE;AAA3C,SAAqDA,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAKJ,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWC;AAAjD,SAA8DO,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA3BiC;;AA8BtC,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHtB,IAAAA,iBAAiB,EAAEe,cAAc,IAAIO,QAAQ,CAACtB,iBAAiB,CAACe,cAAD,CAAlB;AAD1C,GAAP;AAIH,CALD;;AAMA,eAAepB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport { firestore, \r\n        convertCollectionsSnapshotToMap \r\n        } from '../../firebase/firebase.utils';\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\nclass ShopPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n    unsubscribeFormSnapshot = null;\r\n    componentDidMount(){\r\n\r\n        /*****Get collections data from firestore */\r\n        const collectionRef = firestore.collection('collections');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap( snapshot);\r\n            this.props.updateCollections(collectionsMap);\r\n            this.setState({ loading : false})\r\n        })\r\n    }\r\n    render(){\r\n        const {match} = this.props;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact path = {`${match.path}`} render = {(props) => <CollectionsOverviewWithSpinner isLoading={true} {...props}/>} />\r\n                <Route path={`${match.path}/:collectionId`} render = {(props) => <CollectionPageWithSpinner isLoading={this.state.loading} {...props}/>} />      \r\n            </div>\r\n        ) \r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n    }\r\n    \r\n}\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}