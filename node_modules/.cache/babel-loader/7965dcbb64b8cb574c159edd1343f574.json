{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; //set the configuration for my app\n\nconst config = {\n  apiKey: \"AIzaSyA-FsZL2AoB-ih1k9MjegSJWSkxbQkuEeo\",\n  authDomain: \"shopping-system-82277.firebaseapp.com\",\n  databaseURL: \"https://shopping-system-82277.firebaseio.com\",\n  projectId: \"shopping-system-82277\",\n  storageBucket: \"shopping-system-82277.appspot.com\",\n  messagingSenderId: \"527150024050\",\n  appId: \"1:527150024050:web:f83fd6c0faa2d33a9649eb\",\n  measurementId: \"G-CC5WK8QX2S\"\n};\nfirebase.initializeApp(config); // get user infor from google authentication\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //console.log(userAuth.uid)\n  //get user reference info from firestore in collection \"users\" with uid\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdDate = new Date();\n\n    try {\n      // add a new user into our firestore database\n      await userRef.set({\n        displayName,\n        email,\n        createdDate,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error writing document:\", error);\n    }\n  } //console.log(userRef);\n\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport function signInWithGoogle() {\n  //console.log('signin with google');\n  return auth.signInWithPopup(provider);\n}\nexport default firebase;","map":{"version":3,"sources":["E:/yudan/shopping-system/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdDate","Date","set","error","console","log","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,uCAFD;AAGXC,EAAAA,WAAW,EAAE,8CAHF;AAIXC,EAAAA,SAAS,EAAE,uBAJA;AAKXC,EAAAA,aAAa,EAAE,mCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,E,CAEA;;AACA,OAAO,MAAMU,yBAAyB,GAAG,OAAQC,QAAR,EAAkBC,cAAlB,KAAqC;AAC1E,MAAI,CAACD,QAAL,EAAgB,OAD0D,CAE1E;AACA;;AACA,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAqB;AACjB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,WAAW,GAAG,IAAIC,IAAJ,EAApB;;AAEA,QAAI;AACA;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,WAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAOH,KATD,CASC,OAAMa,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACH;AACJ,GAtByE,CAuB1E;;;AACA,SAAOZ,OAAP;AACH,CAzBM;AA2BP,OAAO,MAAMe,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACtE,QAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqBH,aAArB,CAAtB;AAEAH,EAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AAEA,QAAME,KAAK,GAAGnB,SAAS,CAACmB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AACxB,UAAMC,SAAS,GAAGL,aAAa,CAAChB,GAAd,EAAlB;AACH,GAFD;AAGH,CATM;AAWP,OAAO,MAAMsB,IAAI,GAAGtC,QAAQ,CAACsC,IAAT,EAAb;AACP,OAAO,MAAMvB,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMwB,QAAQ,GAAG,IAAIvC,QAAQ,CAACsC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA8B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA9B;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAC/B;AACA,SAAOL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAP;AACH;AAED,eAAevC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n//set the configuration for my app\r\nconst config = {\r\n    apiKey: \"AIzaSyA-FsZL2AoB-ih1k9MjegSJWSkxbQkuEeo\",\r\n    authDomain: \"shopping-system-82277.firebaseapp.com\",\r\n    databaseURL: \"https://shopping-system-82277.firebaseio.com\",\r\n    projectId: \"shopping-system-82277\",\r\n    storageBucket: \"shopping-system-82277.appspot.com\",\r\n    messagingSenderId: \"527150024050\",\r\n    appId: \"1:527150024050:web:f83fd6c0faa2d33a9649eb\",\r\n    measurementId: \"G-CC5WK8QX2S\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\n// get user infor from google authentication\r\nexport const createUserProfileDocument = async ( userAuth, additionalData) => {\r\n    if( !userAuth ) return;\r\n    //console.log(userAuth.uid)\r\n    //get user reference info from firestore in collection \"users\" with uid\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get()\r\n    if( !snapShot.exists){\r\n        const { displayName, email } = userAuth;\r\n        const createdDate = new Date();\r\n\r\n        try {\r\n            // add a new user into our firestore database\r\n            await userRef.set({\r\n                displayName,\r\n                email, \r\n                createdDate,\r\n                ...additionalData\r\n            })\r\n\r\n        }catch(error){\r\n            console.log(\"Error writing document:\", error);\r\n        }\r\n    }\r\n    //console.log(userRef);\r\n    return userRef;\r\n}\r\n\r\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n\r\n    console.log(collectionRef);\r\n\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n        const newDocRef = collectionRef.doc();\r\n    })\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters( { prompt: 'select_account'})\r\n\r\nexport function signInWithGoogle() {\r\n    //console.log('signin with google');\r\n    return auth.signInWithPopup(provider);\r\n}\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}